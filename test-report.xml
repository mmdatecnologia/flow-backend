<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/mateus/MyProjects/flow-backend/src/user/services/user.service.spec.ts">
    <testCase name="UserService should be defined" duration="12"/>
    <testCase name="UserService create should call repository with correct params" duration="5"/>
    <testCase name="UserService create should return a GetUserDto instance with correct data" duration="8"/>
    <testCase name="UserService create should throw an error if repository throws an error" duration="12"/>
    <testCase name="UserService findOne should call repository with correct params" duration="4"/>
    <testCase name="UserService findOne should return a GetUserDto instance with correct data" duration="3"/>
    <testCase name="UserService findOne should return undefined if no record is find" duration="3"/>
    <testCase name="UserService findOne should throw an error if repository throws an error" duration="4"/>
    <testCase name="UserService findAll should call repository with correct params" duration="4"/>
    <testCase name="UserService findAll should return an array of GetUserDto instances with correct data" duration="3"/>
    <testCase name="UserService findAll should throw an error if repository throws an error" duration="4"/>
    <testCase name="UserService findAll should return an empty array if no records are found" duration="3"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/main/main.controller.spec.ts">
    <testCase name="MainController should be defined&quot;" duration="14"/>
    <testCase name="MainController should be check&quot;" duration="6"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/cache/health.indicator.spec.ts">
    <testCase name="HealthIndicator should be defined" duration="11"/>
    <testCase name="HealthIndicator should be perform a isHealthy" duration="4"/>
    <testCase name="HealthIndicator should not perform a isHealthy" duration="7"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/config/configuration.spec.ts">
    <testCase name="Configuration should be defined" duration="3"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/cache/cache.service.spec.ts">
    <testCase name="AppController should be defined&quot;" duration="38"/>
    <testCase name="AppController should be persist a item on cache&quot;" duration="5"/>
    <testCase name="AppController should be remove a item on cache&quot;" duration="4"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/decorators/is-equal-to.decorator.spec.ts">
    <testCase name="GetUserDto should be validate successfully" duration="3"/>
    <testCase name="GetUserDto should be not validate successfully" duration="1"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/cache/cache.config.spec.ts">
    <testCase name="CacheConfig should be defined" duration="14"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/user/models/dtos/update-user.dto.spec.ts">
    <testCase name="UpdateUserDto should be validate without erros" duration="6"/>
    <testCase name="UpdateUserDto should be validate a valid email" duration="1"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/user/models/dtos/create-user.dto.spec.ts">
    <testCase name="CreateUserDto should be validate without erros" duration="4"/>
    <testCase name="CreateUserDto should be validate a valid email" duration="1"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/database/database.config.spec.ts">
    <testCase name="DatabaseConfig should be defined" duration="13"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/config/validation.spec.ts">
    <testCase name="ValidationSpec should be apply validation" duration="15"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/main/main.service.spec.ts">
    <testCase name="MainService should be defined&quot;" duration="10"/>
    <testCase name="MainService should return &quot;Hello World!&quot;" duration="4"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/user/models/dtos/get-user.dto.spec.ts">
    <testCase name="GetUserDto should be has user interface properties" duration="2"/>
  </file>
  <file path="/home/mateus/MyProjects/flow-backend/src/user/models/dtos/user.dto.spec.ts">
    <testCase name="UserDto should be has user interface properties" duration="2"/>
  </file>
</testExecutions>